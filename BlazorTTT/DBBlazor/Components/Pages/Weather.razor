@page "/weather"
@using System.Net
@attribute [StreamRendering]

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

@if (forecasts == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Temp. (F)</th>
            <th>Summary</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var forecast in forecasts)
        {
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
    forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    private class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }

    private List<Test> entries = new List<Test>();
    private MySqlConnection _connection = new("server=localhost;user=root;password=insy;database=demo");

    protected override void OnInitialized()
    {
        _connection.Open();
        using var command = new MySqlCommand("SELECT * FROM test", _connection);
        using var reader = command.ExecuteReader();
        while (reader.Read())
        {
            int value1 = reader.GetInt32(0);
            string value2 = reader.GetString(1);
            entries.Add(new Test { Id = value1, Value = value2 });
        }
        _connection.Close();
    }

    private class Test
    {
        public int Id { get; set; }
        public string Value { get; set; }
    }
}